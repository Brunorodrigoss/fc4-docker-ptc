services:

  nodeapp:
    build: 
      context: ./node
      dockerfile: Dockerfile
    # environment:
    #   - MY_VAR=123456
    env_file:
      - ./node/.env
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./node:/app
    networks:
      - backend
      - db-net
    extra_hosts:
      - "host.docker.internal:host-gateway"

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx-html:/usr/share/nginx/html
    networks:
      - frontend

  mongo:
    image: mongo:latest
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=root
    #   - MONGO_INITDB_ROOT_PASSWORD=example
    healthcheck:
      # test: "exit 0"
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      # - ./.docker//mongo_data:/data/db
      - mongo_data:/data/db
    networks:
      - db-net

volumes:
  mongo_data:

networks:
  db-net:
    driver: bridge
  backend:
    driver: bridge
  frontend:
    driver: bridge